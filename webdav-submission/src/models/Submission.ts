// tslint:disable
/**
 * Submissions
 * This API specifies the submissions service, as accessed by the web admin UI used by students, lecturers and tutors. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * a bundle of files to be submission
 * @export
 * @interface Submission
 */
export interface Submission  {
    /**
     * The globally recognized ID of an submission
     * @type {string}
     * @memberof Submission
     */
    id?: string;
    /**
     * The globally recognized ID of the assignment
     * @type {string}
     * @memberof Submission
     */
    assignmentID?: string;
    /**
     * The tutorial the submission is part of
     * @type {string}
     * @memberof Submission
     */
    tutorialID?: string;
    /**
     * The base56 code to sign
     * @type {string}
     * @memberof Submission
     */
    token?: string;
    /**
     * The timestamp of the last modification by user.
     * @type {Date}
     * @memberof Submission
     */
    lastModificationByUserAt?: Date;
    /**
     * bool to determine if submission was on time or accepted.
     * @type {boolean}
     * @memberof Submission
     */
    accepted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Submission
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Submission
     */
    updatedAt?: Date;
}

export function SubmissionFromJSON(json: any): Submission {
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'assignmentID': !exists(json, 'assignmentID') ? undefined : json['assignmentID'],
        'tutorialID': !exists(json, 'tutorialID') ? undefined : json['tutorialID'],
        'token': !exists(json, 'token') ? undefined : json['token'],
        'lastModificationByUserAt': !exists(json, 'lastModificationByUserAt') ? undefined : new Date(json['lastModificationByUserAt']),
        'accepted': !exists(json, 'accepted') ? undefined : json['accepted'],
        'createdAt': !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
    };
}

export function SubmissionToJSON(value?: Submission): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'assignmentID': value.assignmentID,
        'tutorialID': value.tutorialID,
        'token': value.token,
        'lastModificationByUserAt': value.lastModificationByUserAt === undefined ? undefined : value.lastModificationByUserAt.toISOString(),
        'accepted': value.accepted,
        'createdAt': value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
        'updatedAt': value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
    };
}


